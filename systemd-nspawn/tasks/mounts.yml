---
- name: Make logical volumes for containers
  lvol:
    lv: "{{ item.1.lv.name }}"
    size: "{{ item.1.lv.size }}"
    vg: "{{ item.1.lv.vg }}"
  when: item.1.lv is defined
  loop: "{{ nspawn|subelements('mounts', skip_missing=True) }}"
  loop_control:
    label: "{{ item.0.name }}:{{ item.1.block_device }}"

- name: Make filesystems for containers
  filesystem:
    dev: "{{ item.1.block_device }}"
    fstype: "{{ item.1.fs_type|d('ext4') }}"
    opts: "{{ item.1.fs_opts|d('') }}"
    resizefs: true
  loop: "{{ nspawn|subelements('mounts', skip_missing=True) }}"
  loop_control:
    label: "{{ item.0.name }}:{{ item.1.block_device }}"

- name: Manage mountpoint in containers
  mount:
    path: "{{ nspawn_lib }}/{{ item.0.name }}{{ item.1.mountpoint }}"
    src: "{{ item.1.block_device }}"
    fstype: "{{ item.1.fs_type|d('ext4') }}"
    state: "{{ item.1.mounted|d(true) | ternary('mounted', 'absent') }}"
    opts: "{{ item.1.options|d('defaults') }}"
  loop: "{{ nspawn|subelements('mounts', skip_missing=True) }}"
  loop_control:
    label: "{{ item.0.name }}:{{ item.1.mountpoint }}"

- name: Make mountpoints in contaners
  file:
    path: "{{ nspawn_lib }}/{{ item.0.name }}{{ item.1.mountpoint }}"
    state: directory
    mode: "{{ item.1.mode|d('0755') }}"
    owner: "{{ item.1.owner|d('root') }}"
    group: "{{ item.1.group|d('root') }}"
  loop: "{{ nspawn|subelements('mounts', skip_missing=True) }}"
  loop_control:
    label: "{{ item.0.name }}:{{ item.1.mountpoint }}"
...
