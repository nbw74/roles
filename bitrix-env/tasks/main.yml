---
- name: Check if role assigned to host
  fail:
    msg: "Role 'bitrix-env' is not assigned to this host"
  when: "'bitrix-env' not in roles"

- import_tasks: selinux.yml

- import_tasks: firewalld.yml

- name: "Check if bitrix-env already installed"
  command: getent passwd bitrix
  register: getent_bitrix
  changed_when: false
  failed_when: false
  tags: [ bitrix-env ]

# Install Bitrix-env
- name: "Download {{ bitrix_sh }}"
  get_url:
    dest: /var/local
    force: yes
    url: "http://repos.1c-bitrix.ru/yum/{{ bitrix_sh }}"
    mode: 0755
  when: getent_bitrix.stdout.find('bitrix') == -1
  tags: [ bitrix-env ]

- name: "Run {{ bitrix_sh }}"
  shell: "/var/local/{{ bitrix_sh }} -s -M {{ lookup('password','/dev/null') }}"
  when: getent_bitrix.stdout.find('bitrix') == -1
  register: bx_run_script
  tags: [ bitrix-env ]

- name: Set password for bitrix user
  user:
    name: bitrix
    password: "{{ lookup('password','/dev/null')|password_hash('sha512') }}"
  when: bx_run_script.changed
  tags: [ bitrix-env ]

- name: Restore normal system state
  include_role:
    name: common
  vars:
    pkgupdate: false
  when: bx_run_script.changed

- name: Restore Nginx user
  lineinfile:
    path: "/etc/nginx/nginx.conf"
    regexp: '^user\s+.*;'
    line: 'user nginx;'
  notify: restart nginx

- name: Restore Apache user
  lineinfile:
    path: "/etc/httpd/conf/httpd.conf"
    regexp: '^({{ item }})'
    line: '\1 apache'
    backrefs: yes
  with_items: [ 'User', 'Group' ]
  notify: restart httpd

- name: Package httpd-itk
  yum:
    name: httpd-itk

- name: Enable httpd-itk
  lineinfile:
    path: "/etc/httpd/conf.modules.d/00-mpm-itk.conf"
    regexp: '#*\s*(LoadModule.*)'
    line: '\1'
    backrefs: yes
  notify: restart httpd

- name: Configure firewalld
  firewalld:
    service: "{{ item }}"
    permanent: true
    immediate: true
    state: enabled
  with_items: [ ntp, snmp, http, bacula-client ]
  when: ansible_distribution_major_version|int >= 7
  tags: [ firewalld ]

- name: Status block in bx/site_available/s1.conf
  blockinfile:
    dest: "/etc/nginx/bx/conf/bitrix_general.conf"
    insertafter: 'allow 127.0.0.0/24;'
    block: |
      {% for address in nginx_allow_status_list %}
      allow {{ address|ipv4|ternary(address,'# ' ~ address) }};
      {% endfor %}
  notify: restart nginx
  tags: [ nginx_status ]

- name: Enable PHP modules
  lineinfile:
    dest: "{{ item.dest }}"
    line: "{{ item.line }}"
    state: present
    create: yes
  with_items:
    - { dest: '/etc/php.d/20-curl.ini', line: 'extension=curl.so' }
  when: bitrix_curl_enable
  notify: restart httpd
  tags: [ php_modules, php ]

- import_tasks: mail.yml

- import_tasks: dummy.yml

- name: "mysqld masked (systemd)"
  systemd:
    name: "{{ item }}"
    state: stopped
    enabled: no
    masked: yes
  when: not alien
  with_items:
    - mariadb
    - mysqld
    - mysql
  ignore_errors: true
  tags: [ services ]

- name: "Add domain in /etc/hosts"
  lineinfile:
    dest: /etc/hosts
    line: "127.0.1.1\t{{ ansible_fqdn }}"
    state: present
  tags: [ hosts ]
...
