---
# - name: debug
#   debug:
#     msg: "{{ nspawn_reg_dir }}"

- name: Yum install packages in new containers
#   yum:
#     name: "{{ nspawn_packages }}"
#     installroot: "{{ nspawn_lib }}/{{ new.item.name }}"
#     releasever: "{{ new.item.releasever|d(ansible_distribution_major_version) }}"
  command: >
    yum -y
    --releasever={{ new.item.releasever|d(ansible_distribution_major_version) }}
    --installroot={{ nspawn_lib }}/{{ new.item.name }}
    install {{ nspawn_packages|join(' ') }}
  args:
    creates: "{{ nspawn_lib }}/{{ new.item.name }}/etc/passwd"
    warn: false
  when: new.changed
  loop: "{{ nspawn_reg_dir.results }}"
  loop_control:
    loop_var: new
    label: "{{ new.item.name }}"

- name: Directories for getty override
  file:
    path: "{{ nspawn_lib }}/{{ item.name }}/{{ nspawn_getty_override_dir }}"
    state: directory
  loop: "{{ nspawn }}"
  loop_control:
    label: "{{ item.name }}/{{ nspawn_getty_override_dir }}"

- name: Copy getty override.conf
  copy:
    src: getty.override.conf
    dest: "{{ nspawn_lib }}/{{ item.name }}/{{ nspawn_getty_override_dir }}/override.conf"
  loop: "{{ nspawn }}"
  loop_control:
    label: "{{ item.name }}"

- name: stty icrnl line
  lineinfile:
    path: "{{ nspawn_lib }}/{{ item.0.name }}/{{ item.1 }}"
    regexp: 'stty icrnl'
    line: '[[ $- == *i* ]] && stty icrnl 2>/dev/null'
  loop: "{{ nspawn|product([ 'root/.bashrc', 'etc/skel/.bashrc' ])|list }}"
  loop_control:
    label: "{{ item.0.name }}/{{ item.1 }}"

- name: Setup container locale
  template:
    src: locale.conf.j2
    dest: "{{ nspawn_lib }}/{{ item.name }}/etc/locale.conf"
    owner: root
    group: root
    mode: 0644
  loop: "{{ nspawn }}"
  loop_control:
    label: "{{ item.name }}"

- name: Template container environments
  template:
    src: env.j2
    dest: "{{ nspawn_etc }}/{{ container.name }}.env"
    owner: root
    group: root
    mode: 0644
  loop: "{{ nspawn }}"
  loop_control:
    label: "{{ container.name }}"
    loop_var: container

- name: Directories for containers overrides
  file:
    path: "{{ nspawn_ct_prefix }}{{ item.name }}.service.d"
    state: directory
  loop: "{{ nspawn }}"
  loop_control:
    label: "{{ item.name }}"

- name: Symlink to global override.conf
  file:
    path: "{{ nspawn_ct_prefix }}{{ item.name }}.service.d/override.conf"
    src: "{{ nspawn_override_dir }}/override.conf"
    state: link
  loop: "{{ nspawn }}"
  loop_control:
    label: "{{ item.name }}"

...
