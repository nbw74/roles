---
- name: Check role requirements
  assert:
    that:
      - ansible_distribution_file_variety == 'RedHat'
      - ansible_distribution_major_version|int >= 7
      - inventory_hostname in groups['docker']

- name: Install requirements
  yum:
    name: "{{ docker_req_packages }}"

- name: Install repository
  command: >
    yum-config-manager --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo
  args:
    creates: /etc/yum.repos.d/docker-ce.repo

- name: Install docker-ce
  yum:
    name: "{{ docker_main_packages }}"

- name: Install Docker SDK for Python (I)
  yum:
    name: "python-docker{{ (ansible_python_version is version('2.7', '<='))|ternary('-py', '') }}"

- name: Override block
  block:
    - name: Create dir for systemd override file
      file:
        path: /etc/systemd/system/docker.service.d
        state: directory
        owner: root
        mode: "0755"

    - name: Create systemd override file
      template:
        src: etc/systemd/system/docker.service.d/ansible-docker.conf.j2
        dest: /etc/systemd/system/docker.service.d/ansible-docker.conf
        owner: root
        mode: "0644"
      notify: reload systemd
  when: docker_override|length > 0

- name: Remove systemd override file
  file:
    path: /etc/systemd/system/docker.service.d/ansible-docker.conf
    state: absent
  notify: reload systemd
  when: docker_override|length == 0

- name: Create daemon.json file
  copy:
    dest: "/etc/docker/daemon.json"
    content: >
      {{ docker_daemon_json|to_nice_json }}
    owner: root
    group: root
    mode: "0644"
  when: docker_daemon_json|length > 0
  notify: reload docker

- name: Enable docker service
  service:
    name: docker
    enabled: yes
    state: started

- name: Run containers
  docker_container:
    name: "{{ item.name }}"
    image: "{{ item.image|d(omit) }}"
    published_ports: "{{ item.published_ports|d(omit) }}"
    volumes: "{{ item.volumes|d(omit) }}"
    restart_policy: "{{ item.restart_policy|d('unless-stopped') }}"
    state: "{{ item.state|d('started') }}"
  loop: "{{ docker_containers }}"
...
