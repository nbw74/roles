---
- name: Check role requirements
  assert:
    that:
      - inventory_hostname in groups['mysql']
      - ansible_distribution_file_variety == "RedHat"
      - ansible_distribution_major_version|int == 7
      - mysql_flavor is defined
      - mysql_version is defined

- name: Install common packages
  yum:
    name: "{{ mysql_common_packages }}"

- name: Include rh-mariadb
  include_tasks: rh_mariadb.yml
  when: "mysql_flavor == 'rh-mariadb'"

- name: Include percona tasks
  include_tasks: percona.yml
  when: mysql_percona_packages|length > 0

- name: Remove percona packages
  yum:
    name: percona-*
    state: absent
  when: mysql_percona_packages|length == 0

- name: Manage mysql users
  mysql_user:
    name: "{{ item.name }}"
    state: "{{ item.state|d(True)|bool|ternary('present', 'absent') }}"
    password: "{{ item.password }}"
    priv: "{{ item.priv|d(item.name ~ '.*:ALL') }}"
    host: "{{ item.host|d('%') }}"
    login_unix_socket: "{{ item.login_unix_socket|d('/var/lib/mysql/mysql.sock') }}"
    login_user: root
  loop: "{{ mysql_users }}"
  loop_control:
    label: "{{ item.name }}"

- name: Create password files
  copy:
    dest: "/root/.passwd.mysql.{{ item.name }}"
    content: >
      {{ item.password }}
  loop: "{{ mysql_users|selectattr('password_file', 'sameas', True)|list }}"
  loop_control:
    label: "{{ item.name }}"

- name: Copy scripts
  copy:
    src: "{{ item.path }}"
    dest: "/{{ item.path }}"
    owner: "{{ item.owner|d('root') }}"
    mode: "{{ item.mode|d('0755') }}"
  loop:
    - path: usr/local/bin/bacula_innobackupex.sh
    - path: usr/local/bin/bacula_mysqldump.sh
...
