---
- name: "Stop and disable some services"
  systemd:
    name: "{{ item }}"
    state: stopped
    enabled: no
    masked: yes
  with_items:
    - NetworkManager
    - chronyd
  when: >
    ( ansible_distribution == "Fedora" ) or
    ( ansible_distribution == "CentOS" and ansible_distribution_major_version|int >= 7 )
  ignore_errors: yes
  tags: [ services ]

- name: "Stop and disable firewalld"
  systemd:
    name: "{{ item }}"
    state: stopped
    enabled: no
    masked: yes
  with_items:
    - firewalld
  when: 
    - ansible_distribution_major_version|int >= 7
    - '"bitrix-env" not in roles'
  ignore_errors: yes
  tags: [ services ]

- name: "Reconfigure logrotate"
  replace:
    dest: /etc/logrotate.conf
    regexp: '^#\s*compress'
    replace: 'compress'
  tags: [ logrotate ]

- name: "Reconfigure sudo"
  replace:
    dest: /etc/sudoers
    regexp: '^(Defaults\s+always_set_home)'
    replace: '# \1'
    validate: 'visudo -cf %s'
  tags: [ sudo ]

- include_tasks: ipset.yml

- include_tasks: xt_recent.yml

- include_tasks: iptables.yml

- name: "Enable and start network service"
  service: name=network enabled=yes state=started
  ignore_errors: yes
  tags: [ services ]

- name: "Qemu-GA enabled and started (6)"
  service:
    name: "qemu-ga"
    state: started
    enabled: yes
  when:
    - 'ansible_virtualization_type == "kvm"'
    - 'ansible_virtualization_role == "guest"'
    - 'ansible_distribution_major_version == "6"'
    - not alien
  tags: [ services, kvm ]

- name: "Qemu-GA enabled and started (7)"
  service:
    name: "qemu-guest-agent"
    state: started
    enabled: yes
  when:
    - 'ansible_virtualization_type == "kvm"'
    - 'ansible_virtualization_role == "guest"'
    - 'ansible_distribution_major_version == "7"'
    - not alien
  ignore_errors: yes
  tags: [ services, kvm ]

- name: "Enable and start vmtoolsd service"
  service: name=vmtoolsd enabled=yes state=started
  when: ansible_product_name == "VMware Virtual Platform"
  tags: [ services, vmware ]

- name: "Enable and start iptables service"
  service: name={{ item }} enabled=yes state=started
  with_items:
    - iptables
  when: '"bitrix-env" not in roles'
  tags: [ services, iptables ]

- name: "Enable and start other services"
  service: name={{ item }} enabled=yes state=started
  with_items:
    - ntpd
    - rsyslog
    - postfix
    - snmpd
  tags: [ services, snmp ]

- name: Set mdraid presence
  set_fact:
    mdraid_is_present: >-
      {{ ansible_device_links.ids | d('') | string | regex_search('md[0-9]') |
      string | regex_replace('[Nn]one','') | length > 0 }}

- name: Set LVM presence
  set_fact:
    lvm_is_present: "{{ ansible_lvm is defined and ansible_lvm.vgs|length > 0 }}"
  tags: [ fstrim ]

- name: Get TRIM support
  shell: >
    lsblk -do NAME,DISC-GRAN
    | awk '/sd[a-z]/ { if($2 != "0B") flag=1 } END { if(flag) print "True"; else print "False" }'
  register: trim_support_check
  changed_when: no
  tags: [ fstrim ]

- name: Set TRIM support
  set_fact:
    trim_is_supported: "{{ trim_support_check.stdout|bool }}"
  tags: [ fstrim ]

- debug:
    msg:
      - "mdraid_is_present: {{ mdraid_is_present }}"
      - "lvm_is_present: {{ lvm_is_present }}"
      - "trim_is_supported: {{ trim_is_supported }}"

- name: set discard option for lvm
  lineinfile:
    path: "/etc/lvm/lvm.conf"
    regexp: '^\s*#*\s*issue_discards'
    line: "\tissue_discards = {{ trim_is_supported|ternary('1','0') }}"
  when: lvm_is_present
  tags: [ fstrim ]

- name: manage fstrim.timer
  systemd:
    name: fstrim.timer
    enabled: "{{ trim_is_supported|ternary('yes','no') }}"
    state: "{{ trim_is_supported|ternary('started','stopped') }}"
  when: ansible_distribution_major_version|int >= 7
  tags: [ fstrim ]

...
