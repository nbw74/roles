---
- name: "Stop and disable some services"
  systemd:
    name: "{{ item }}"
    state: stopped
    enabled: no
    masked: yes
  loop:
    - NetworkManager
    - chronyd
  when:
    - ansible_distribution_major_version|int >= 7
    - not common_leave_networkmanager|d()
    - server_type != 'ct'
  register: common_reg_svc
  failed_when:
    - common_reg_svc is failed
    - common_reg_svc.msg is not search('Could not find the requested service')
  tags: [ services ]

- name: "Stop and disable firewalld"
  systemd:
    name: "{{ item }}"
    state: stopped
    enabled: no
    masked: yes
  with_items:
    - firewalld
  when:
    - ansible_distribution_major_version|int == 7
    - inventory_hostname not in groups['bitrix']
  ignore_errors: yes
  tags: [ services ]

- name: "Reconfigure logrotate"
  replace:
    dest: /etc/logrotate.conf
    regexp: '^#\s*compress'
    replace: 'compress'
  tags: [ logrotate ]

- name: "Reconfigure sudo"
  replace:
    dest: /etc/sudoers
    regexp: '^(Defaults\s+always_set_home)'
    replace: '# \1'
    validate: 'visudo -cf %s'
  tags: [ sudo ]

- name: Template custom sudoers
  template:
    src: sudoers_d.j2
    dest: "/etc/sudoers.d/{{ item.name }}"
    owner: root
    group: root
    mode: 0440
  loop: "{{ common_sudoers_d|rejectattr('state', 'sameas', false)|list }}"
  loop_control:
    label: "{{ item.name }}"

- name: Remove custom sudoers
  file:
    path: "/etc/sudoers.d/{{ item.name }}"
    state: absent
  loop: "{{ common_sudoers_d|selectattr('state', 'sameas', false)|list }}"
  loop_control:
    label: "{{ item.name }}"

- name: IPTables includes
  block:
    - include_tasks: ipset.yml
    - include_tasks: iptables.yml
  when:
    - common_iptables_enable
    - ansible_distribution_major_version|int <= 7
    - inventory_hostname not in groups['bitrix']

- name: Flush handlers
  meta: flush_handlers

- name: "Enable and start network service"
  service:
    name: network
    enabled: yes
    state: started
  when:
    - ansible_distribution_major_version|int <= 7
    - server_type != 'ct'
  ignore_errors: yes
  tags: [ services ]

- name: "Qemu-GA enabled and started (6)"
  service:
    name: "qemu-ga"
    state: started
    enabled: yes
  when:
    - 'ansible_virtualization_type == "kvm"'
    - 'ansible_virtualization_role == "guest"'
    - 'ansible_distribution_major_version == "6"'
    - not alien
  tags: [ services, kvm ]

- name: "Qemu-GA enabled and started (7)"
  service:
    name: "qemu-guest-agent"
    state: started
    enabled: yes
  when:
    - 'ansible_virtualization_type == "kvm"'
    - 'ansible_virtualization_role == "guest"'
    - 'ansible_distribution_major_version == "7"'
    - not alien
  ignore_errors: yes
  tags: [ services, kvm ]

- name: "Enable and start vmtoolsd service"
  service: name=vmtoolsd enabled=yes state=started
  when: ansible_product_name == "VMware Virtual Platform"
  tags: [ services, vmware ]

- name: "Enable and start other services"
  service: name={{ item }} enabled=yes state=started
  with_items:
    - rsyslog
    - postfix
  tags: [ services, snmp ]

- name: "Enable and start other services (not openvz)"
  service: name={{ item }} enabled=yes state=started
  with_items:
    - ntpd
    - snmpd
  when:
    - ansible_virtualization_type != 'openvz'
    - server_type != 'ct'
  tags: [ services, snmp ]

- name: Set mdraid presence
  set_fact:
    mdraid_is_present: >-
      {{ ansible_device_links.ids | d('') | string | regex_search('md[0-9]') |
      string | regex_replace('[Nn]one','') | length > 0 }}
  when:
    - ansible_virtualization_type != 'openvz'
    - server_type != 'ct'

- name: Set LVM presence
  set_fact:
    lvm_is_present: "{{ ansible_lvm is defined and ansible_lvm.vgs|length > 0 }}"
  when: server_type != 'ct'
  tags: [ fstrim ]

- name: Get TRIM support
  shell: >
    lsblk -do NAME,DISC-GRAN
    | awk '/sd[a-z]|nvme/ { if($2 != "0B") flag=1 } END { if(flag) print "True"; else print "False" }'
  register: trim_support_check
  changed_when: no
  when: server_type != 'ct'
  tags: [ fstrim ]

- name: Set TRIM support
  set_fact:
    trim_is_supported: "{{ trim_support_check.stdout|bool }}"
  when: server_type != 'ct'
  tags: [ fstrim ]

- debug:
    msg:
      - "server_type: {{ server_type }}"
      - "mdraid_is_present: {{ mdraid_is_present|d('NONONO') }}"
      - "lvm_is_present: {{ lvm_is_present|d() }}"
      - "trim_is_supported: {{ trim_is_supported|d() }}"

- name: set discard option for lvm
  lineinfile:
    path: "/etc/lvm/lvm.conf"
    regexp: '^\s*#*\s*issue_discards'
    line: "\tissue_discards = {{ trim_is_supported|ternary('1','0') }}"
  when: lvm_is_present|d()
  tags: [ fstrim ]

- name: manage fstrim.timer
  systemd:
    name: fstrim.timer
    enabled: "{{ trim_is_supported|ternary('yes','no') }}"
    state: "{{ trim_is_supported|ternary('started','stopped') }}"
  when:
    - ansible_service_mgr == 'systemd'
    - server_type != 'ct'
  tags: [ fstrim ]

- name: fstrim cron job present
  template:
    src: fstrim.j2
    dest: /etc/cron.weekly/fstrim
    owner: root
    group: root
    mode: 0755
  when:
    - ansible_service_mgr != 'systemd'
    - trim_is_supported
    - server_type != 'ct'
  notify:
    - config reload crond
    - config reload cron
  tags: [ fstrim ]

- name: fstrim cron job absent
  file:
    path: /etc/cron.weekly/fstrim
    state: absent
  when:
    - ansible_service_mgr != 'systemd'
    - not trim_is_supported
    - server_type != 'ct'
  notify:
    - config reload crond
    - config reload cron
  tags: [ fstrim ]

- name: Local facts
  block:
    - name: Directory for custom facts
      file:
        path: "/etc/ansible/facts.d"
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Set custom facts
      copy:
        dest: "/etc/ansible/facts.d/common.fact"
        content: >
          {{ common_facts|to_nice_json }}
        owner: root
        group: root
        mode: 0644
  when: common_facts|length > 0
  tags: [ facts ]

- name: Dir for flags
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - "{{ flags_dir }}"
  tags: [ dirs ]

...
