---
- name: When not NM section
  block:
    - name: "Remove lines from ifcfg"
      lineinfile:
        dest: "/etc/sysconfig/network-scripts/ifcfg-{{ ansible_default_ipv4.interface }}"
        state: absent
        regexp: "{{ item }}"
      loop:
        - '^DEFROUTE='
        - '^PEERROUTES='
        - '^IPV4_FAILURE_FATAL='
        - '^IPV6_'
      tags: [ services, ifcfg ]

    - name: "Edit ifcfg"
      lineinfile:
        dest: "/etc/sysconfig/network-scripts/ifcfg-{{ ansible_default_ipv4.interface }}"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - { regexp: '^IPV6INIT=', line: 'IPV6INIT="no"' }
      tags: [ services, ifcfg ]
      ignore_errors: yes
  when: not common_leave_networkmanager

- name: Ifcfg template section
  block:
    - name: Template ifcfg
      template:
        src: ifcfg.j2
        dest: "{{ common_network_scripts }}/ifcfg-{{ item.dev }}"
        owner: root
        group: root
        mode: 0644
      when: item.state|d(true)
      register: common_ifcfg_result
      loop: "{{ common_ifcfg|flatten(levels=1) }}"
      loop_control:
        label: "{{ item.dev }}"
      tags: [ ifcfg ]

    - name: Remove ifcfg
      file:
        path: "{{ common_network_scripts }}/ifcfg-{{ item.dev }}"
        state: absent
      when: not item.state|d(true)
      loop: "{{ common_ifcfg|flatten(levels=1) }}"
      loop_control:
        label: "{{ item.dev }}"
      tags: [ ifcfg ]
  when: common_ifcfg|length > 0

- name: Ifcfg line section
  block:
    - name: Include ifcfg loop
      include_tasks: ifcfg_vars.yml
      loop: "{{ common_ifcfg_vars|flatten(levels=1) }}"
      loop_control:
        loop_var: ifcfg
        label: "{{ ifcfg.dev }}"
      tags: [ ifcfg ]
  when: common_ifcfg_vars|length > 0

- name: Interfaces restart section
  block:
    - name: Initialize array
      set_fact:
        common_ifcfg_changed: []
      tags: [ ifcfg ]

    - name: Populate array with dev names of changed ifcfgs
      set_fact:
        common_ifcfg_changed: "{{ common_ifcfg_changed }} + [ '{{ item.item.dev }}' ]"
      when:
        - common_ifcfg_result.results is defined
        - item.changed
        - item.item.variables.ONBOOT|d('no') | regex_search('[Yy][Ee][Ss]')
      loop: "{{ common_ifcfg_result.results|flatten(levels=1) }}"
      loop_control:
        label: "{{ item.item.dev }}"
      tags: [ ifcfg ]

    - name: "Restart changed interfaces"
      shell: >
        ifdown {{ item }} ; ifup {{ item }}
      async: 45
      poll: 5
      when: common_ifcfg_changed|length > 0
      loop: "{{ common_ifcfg_changed|unique|flatten(levels=1) }}"
      loop_control:
        label: "{{ item }}"
      ignore_errors: yes
      tags: [ ifcfg ]
  when: common_ifcfg_restart
...
