#####
# vim: ft=nginx:
server {
    include         /etc/nginx/include.d/listen${_alt}.conf;
    server_name     ${S_DOMAIN}
                    www.${S_DOMAIN};

    # Log files
    access_log      ${BASEDIR}/${user}/log/${SITEROOT}nginx-access.log combined buffer=128k;
    error_log       ${BASEDIR}/${user}/log/${SITEROOT}nginx-error.log;

    return          301 https://${S_DOMAIN}$$request_uri;
}

server {
    include         /etc/nginx/include.d/listen_ssl${_alt}.conf;
    server_name     ${S_DOMAIN};

    # Load configuration files for the default server block.
    include         /etc/nginx/default.d/*.conf;
    # Log files
    access_log      ${BASEDIR}/${user}/log/${SITEROOT}nginx-access.log combined buffer=128k;
    error_log       ${BASEDIR}/${user}/log/${SITEROOT}nginx-error.log;

    ssl_certificate         /etc/pki/tls/certs/${S_DOMAIN}.crt;
    ssl_certificate_key     /etc/pki/tls/private/${S_DOMAIN}.key;
    include                 /etc/nginx/include.d/ssl_common.conf;

    location ~* \.(jpg|jpeg|gif|png|css|eot|woff|svg|ttf|js|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|tar|wav|bmp|rtf|swf|ico|flv|txt|docx|xlsx)$ {
        root                ${BASEDIR}/${user}/${WEBROOT};
        index               index.html index.php;
        expires             30d;
    }

    location ~ /\.ht {
        deny                all;
    }

    location / {
        proxy_pass          http://127.0.0.1:8888;
        include             /etc/nginx/include.d/proxy_common.conf;
    }
}

server {
    include         /etc/nginx/include.d/listen_ssl${_alt}.conf;
    server_name     www.${S_DOMAIN};

    # Log files
    access_log      ${BASEDIR}/${user}/log/${SITEROOT}nginx-access.log combined buffer=128k;
    error_log       ${BASEDIR}/${user}/log/${SITEROOT}nginx-error.log;

    ssl_certificate         /etc/pki/tls/certs/${S_DOMAIN}.crt;
    ssl_certificate_key     /etc/pki/tls/private/${S_DOMAIN}.key;
    include                 /etc/nginx/include.d/ssl_common.conf;

    return          301 https://${S_DOMAIN}$$request_uri;
}
