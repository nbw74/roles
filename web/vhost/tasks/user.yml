---
- name: Delete user
  user:
    name: "{{ item.user|d(item.name) }}"
    state: absent
    force: yes
    remove: no
  register: vhost_user_del
  when:
    - item.nginx_301_only is not defined
    - not item.state|d(True)
  loop: "{{ vhost }}"
  loop_control:
    label: "{{ item.user|d(item.name) }}"
  tags: [ user, db, redmine ]

- name: Delete crontabs
  file:
    path: "/var/spool/cron/{{ item.user|d(item.name) }}"
    state: absent
  when: item.nginx_301_only is not defined
  loop: "{{ vhost|selectattr('state', 'sameas', false)|list }}"
  loop_control:
    label: "{{ item.user|d(item.name) }}"
  tags: [ user, cron ]

- name: Create user
  user:
    name: "{{ item.user|d(item.name) }}"
    shell: "/bin/bash"
    home: "{{ vhost_basedir }}/{{ item.user|d(item.name) }}"
    generate_ssh_key: yes
    ssh_key_type: "{{ item.key_type|d('ed25519') }}"
  register: vhost_user_add
  when:
    - item.nginx_301_only is not defined
    - item.state|d(True)
  loop: "{{ vhost }}"
  loop_control:
    label: "{{ item.user|d(item.name) }}"
  notify: restorecon command
  tags: [ user, db, redmine ]

- name: set password
  user:
    name: "{{ item.user|d(item.name) }}"
    password: "{{ item.password|password_hash('sha512', 'bzzz') }}"
    update_password: always
  when: item.password is defined
  loop: "{{ vhost|rejectattr('state', 'sameas', false)|list }}"
  loop_control:
    label: "{{ item.user|d(item.name) }}"
  tags: [ user, db, password ]

- name: copy pubkey to authorized_keys
  copy:
    src: "{{ item.ssh_key_file }}.pub"
    dest: "{{ item.home }}/.ssh/authorized_keys"
    remote_src: yes
    force: yes
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
    mode: 0600
  when: item.state == 'present'
  loop: "{{ vhost_user_add.results|selectattr('changed')|list }}"
  loop_control:
    label: "{{ item.name|d('null') }}"
  notify: restorecon command
  tags: [ user, db ]

- name: set homedir mode
  file:
    path: "{{ item.home }}"
    state: directory
    mode: 0750
  when: item.state|d('nope') == 'present'
  loop: "{{ vhost_user_add.results|rejectattr('legacy', 'sameas', true)|list }}"
  loop_control:
    label: "{{ item.name|d('null') }}"
  tags: [ user, db ]

- name: add web-server users to the user group
  user:
    name: "{{ item[1] }}"
    append: yes
    groups: "{{ item[0].name }}"
  when: item[0].state|d('absent') == 'present'
  loop: "{{ vhost_user_add.results|product([ vhost_frontuser, vhost_backuser ])|list }}"
  loop_control:
    label: "{{ item[1] }}, {{ item[0].name|d('null') }}"
  tags: [ user, db ]

- name: remove unused groups
  group:
    name: "{{ item.name }}"
    state: absent
  when: item.state == 'absent'
  loop: "{{ vhost_user_del.results|selectattr('changed')|list }}"
  loop_control:
    label: "{{ item.name|d('null') }}"
  tags: [ user, db ]

- name: Cron tasks present
  cron:
    name: "{{ item[1].name }}"
    user: "{{ item[0].user|d(item[0].name) }}"
    job: "{{ item[1].job }}"
    minute: "{{ item[1].minute|d('*') }}"
    hour: "{{ item[1].hour|d('*') }}"
    day: "{{ item[1].day|d('*') }}"
    weekday: "{{ item[1].weekday|d('*') }}"
    month: "{{ item[1].month|d('*') }}"
    disabled: "{{ item[1].disabled|d('false') }}"
    state: present
  when: item[0].state|d(True)
  loop: "{{ vhost|subelements('cron', skip_missing=True) }}"
  loop_control:
    label: "{{ item[0].user|d(item[0].name) }}:{{ item[1].name }}"
  tags: [ cron ]

- name: manage common directories
  file:
    state: directory
    path: "{{ vhost_basedir }}/{{ item[0].user|d(item[0].name) }}/{{ item[1] }}"
    owner: "{{ item[0].user|d(item[0].name) }}"
    group: "{{ item[0].user|d(item[0].name) }}"
    mode: 0775
  when:
    - item[0].state|d(true)
    - not item[0].legacy|d()
    - item[0].nginx_301_only is not defined
  loop: "{{ vhost|product([ 'tmp', 'log' ])|list }}"
  loop_control:
    label: "{{ item[1] }}, {{ item[0].user|d(item[0].name) }}"
  notify: restorecon command
  tags: [ user, db ]

- name: manage webroot directory
  file:
    state: directory
    path: "{{ vhost_basedir }}/{{ item.user|d(item.name) }}/{{ item.webroot|d('www') }}"
    owner: "{{ item.user|d(item.name) }}"
    group: "{{ item.user|d(item.name) }}"
    mode: "{{ (vhost_backend == 'bitrix')|ternary('0770','0755') }}"
  when: item.nginx_301_only is not defined
  loop: "{{ vhost|rejectattr('state', 'sameas', false)|list }}"
  loop_control:
    label: "{{ item.user|d(item.name) }}"
  tags: [ user, db ]

- name: Initial index file
  copy:
    src: "index.php"
    dest: "{{ vhost_basedir }}/{{ item.user|d(item.name) }}/{{ item.webroot|d('www') }}/{{ item.index|d('index.php') }}"
    owner: "{{ item.user|d(item.name) }}"
    group: "{{ item.user|d(item.name) }}"
    mode: 0644
    force: no
  when:
    - not item.legacy|d()
    - item.nginx_301_only is not defined
    - vhost_backend != 'bitrix'
  loop: "{{ vhost|rejectattr('state', 'sameas', false)|list }}"
  loop_control:
    label: "{{ item.user|d(item.name) }}"
  tags: [ user, db ]

- name: File contains unit port number (for use in CI)
  copy:
    content: >
      {{ item.unit.port }}
    dest: "/var/lib/flags/{{ item.user|d(item.name) }}.uport"
    owner: root
    mode: "0644"
  loop: "{{ vhost|selectattr('unit', 'defined')|list }}"
...
