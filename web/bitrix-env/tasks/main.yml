---
- name: Check if role assigned to host
  assert:
    that:
      - inventory_hostname in groups['bitrix']

- name: Import selinux
  import_tasks: selinux.yml

- name: Import firewalld
  import_tasks: firewalld.yml

- name: "Check if bitrix-env already installed"
  command: getent passwd bitrix
  register: getent_bitrix
  changed_when: false
  failed_when: false
  tags: [ bitrix-env ]

- name: "Download {{ bitrix_sh }}"
  get_url:
    dest: /var/local
    force: yes
    url: "http://repos.1c-bitrix.ru/yum/{{ bitrix_sh }}"
    mode: 0755
  when: getent_bitrix.stdout.find('bitrix') == -1
  tags: [ bitrix-env ]

- name: "Run {{ bitrix_sh }}"
  shell: "/var/local/{{ bitrix_sh }} -s -M {{ lookup('password','/dev/null') }}"
  when: getent_bitrix.stdout.find('bitrix') == -1
  register: bx_run_script
  tags: [ bitrix-env ]

- name: Set password for bitrix user
  user:
    name: bitrix
    password: "{{ lookup('password','/dev/null')|password_hash('sha512') }}"
  when: bx_run_script.changed
  tags: [ bitrix-env ]

- name: Restore normal system state
  include_role:
    name: common
  vars:
    pkgupdate: false
  when: bx_run_script.changed

- name: Import packages
  import_tasks: packages.yml

- name: Import bvat
  import_tasks: bvat.yml

- name: Restore Nginx user
  lineinfile:
    path: "/etc/nginx/nginx.conf"
    regexp: '^user\s+.*;'
    line: 'user nginx;'
  notify: restart nginx

- name: Restore Apache user
  lineinfile:
    path: "/etc/httpd/conf/httpd.conf"
    regexp: '^({{ item }})'
    line: '\1 apache'
    backrefs: yes
  with_items: [ 'User', 'Group' ]
  notify: restart httpd

- name: Apache umask dir
  file:
    path: "/etc/systemd/system/httpd.service.d"
    state: directory
    mode: 0755

- name: Apache umask file
  copy:
    src: umask.conf
    dest: "/etc/systemd/system/httpd.service.d/umask.conf"
    mode: 0644
  notify: restart httpd

- name: "Fix owner of dirs in /tmp/php_*"
  file:
    path: "/tmp/{{ item }}"
    state: directory
    owner: apache
    group: apache
    mode: 0770
  with_items:
    - "php_sessions"
    - "php_sessions/www"
    - "php_sessions/ext_www"
    - "php_upload"
    - "php_upload/www"
    - "php_upload/ext_www"

- name: Enable httpd-itk
  lineinfile:
    path: "/etc/httpd/conf.modules.d/00-mpm-itk.conf"
    regexp: '#*\s*(LoadModule.*)'
    line: '\1'
    backrefs: yes
  notify: restart httpd

- name: Configure firewalld
  firewalld:
    service: "{{ item }}"
    permanent: true
    immediate: true
    state: enabled
  with_items: [ ntp, snmp, http, bacula-client ]
  when: ansible_distribution_major_version|int >= 7
  tags: [ firewalld ]

- name: Import php
  import_tasks: php.yml

- name: Import configs
  import_tasks: configs.yml

- name: Include certbot from nginx role
  include_role:
    name: web/nginx
    tasks_from: certbot.yml

- name: Import mail
  import_tasks: mail.yml

- name: Import dummy
  import_tasks: dummy.yml

- name: Mask services
  systemd:
    name: "{{ item }}"
    state: stopped
    enabled: no
    masked: yes
  when: not alien
  with_items:
    - mariadb
    - mysqld
    - mysql
  ignore_errors: true
  tags: [ services ]

- name: "Add domain in /etc/hosts"
  lineinfile:
    dest: /etc/hosts
    line: "127.0.1.1\t{{ ansible_fqdn }}"
    state: present
  tags: [ hosts ]
...
