#!/bin/bash
# THIS FILE IS MANAGED BY ANSIBLE, ALL CHANGES WILL BE LOST
#
# Script for {{ postgresql_iptables_chain }} iptables chain check
# Southbridge LLC, 2017 A.D.
#

set -o nounset
set -E

readonly app="postgresql"
readonly chain="{{ postgresql_iptables_chain }}"
readonly svc="{{ postgresql_iptables_service }}"
readonly port="{{ postgresql_conf['port']|default('5432') }}"
{% if ansible_distribution_major_version|int > 6 %}
readonly w="--wait"
{% else %}
readonly w=""
{% endif %}

{% raw %}
readonly PATH=/bin:/sbin:/usr/bin:/usr/sbin
readonly bn=$(basename $0)

main() {
    local FN=$FUNCNAME
    local -i lc=0
    local reason="UNKNOWN"

    trap except ERR
    # Если сервис выключен - вываливаемся
    if pidof systemd >/dev/null; then
        systemctl is-enabled ${svc}.service >/dev/null || exit 0
    else
        chkconfig --list $svc | fgrep -q '3:on' || exit 0
    fi

    # Проверка, что нужная цепочка существует
    if iptables $w -t filter -n -L $chain >/dev/null 2>&1
    then
        # Проверка, что она не пуста (т.е. есть более 2-х строк в выводе)
        lc=$(iptables $w -t filter -n -L $chain | wc -l)
        if (( lc < 3 )); then
            reason="CHAIN IS EMPTY"
            _service reload
        fi
        # Проверка, что нужные пакеты направляются в цепочку
        if iptables $w -t filter -n -L INPUT | fgrep -q "dpt:$port"
        then
            true
        else
            reason="CHAIN IS UNUSED"
            _service reload
        fi
    else
        reason="CHAIN IS ABSENT"
        _service restart
    fi

    # Проверка, не сделали ли 'service iptables save'
    if fgrep -q $chain /etc/sysconfig/iptables
    then
        sed -i "/$chain/d" /etc/sysconfig/iptables
    fi
}

_service() {
    local FN=$FUNCNAME
    local action="$1"

    if pidof systemd >/dev/null; then
        systemctl $action ${svc}.service
    else
        service $svc $action
    fi

    logger -p warning -t "$bn" "WARNING: $svc ${action}ed because of ${reason}"
}

except() {
    RET=$?

    logger -p err -s -t "$bn" "ERROR: script failure in function '$FN'"
    exit $RET
}

main

{% endraw %}
## EOF ##
