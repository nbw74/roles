#!/bin/bash
# THIS FILE IS ANSIBLE MANAGED
#
# Script for PostgreSQL cluster initialization
# source: https://wiki.clusterlabs.org/wiki/PgSQL_Replicated_Cluster
# Southbridge LLC, 2017 A.D.
#

main() {

    trap 'except $LINENO' ERR

    local nodelist="$(pcs status nodes | awk '/Online:/ { sub($1, ""); sub(/^\s+/, ""); print $0; exit }')"

    pcs cluster cib PGSQL_CFG

    pcs -f PGSQL_CFG property set no-quorum-policy="stop"
    pcs -f PGSQL_CFG property set stonith-enabled="false"
    pcs -f PGSQL_CFG resource defaults resource-stickiness="INFINITY"
    pcs -f PGSQL_CFG resource defaults migration-threshold="1"

    pcs -f PGSQL_CFG resource create VADDR-MAIN ocf:heartbeat:IPaddr2 \
       ip="{{ postgresql_pcmk_ip_main }}" \
       nic="eth0" \
       cidr_netmask="24" \
       op start   timeout="60s" interval="0s"  on-fail="restart" \
       op monitor timeout="60s" interval="10s" on-fail="restart" \
       op stop    timeout="60s" interval="0s"  on-fail="block"

    pcs -f PGSQL_CFG resource create VADDR-REPL ocf:heartbeat:IPaddr2 \
       ip="{{ postgresql_pcmk_ip_repl }}" \
       nic="eth0" \
       cidr_netmask="24" \
       meta migration-threshold="0" \
       op start   timeout="60s" interval="0s"  on-fail="stop" \
       op monitor timeout="60s" interval="10s" on-fail="restart" \
       op stop    timeout="60s" interval="0s"  on-fail="ignore"

    pcs -f PGSQL_CFG resource create PGSQL ocf:{{ postgresql_pcmk_ra_org }}:pgsql \
       pgctl="/usr/pgsql-{{ postgresql_version_raw }}/bin/pg_ctl" \
       psql="/usr/pgsql-{{ postgresql_version_raw }}/bin/psql" \
       pgdata="/var/lib/pgsql/{{ postgresql_version_raw }}/data/" \
       rep_mode="async" \
{% if postgresql_wal_backup_enable %}
       restore_command='ssh {{ postgresql_wal_backup_user }}@{{ postgresql_wal_backup_server }} "cat {{ postgresql_wal_backup_dir }}/%f.bz2" | lbzip2 -d - > %p' \
{% else %}
       restore_command="cp /var/lib/pgsql/{{ postgresql_version_raw }}/pg_archive/%f %p" \
{% endif %}
       repuser="replicator" \
       primary_conninfo_opt="keepalives_idle=60 keepalives_interval=5 keepalives_count=5" \
       tmpdir="/var/lib/pgsql/{{ postgresql_version_raw }}/tmp" \
       master_ip="{{ postgresql_pcmk_ip_repl }}" \
       restart_on_promote='true' \
       check_wal_receiver='true' \
       node_list="$nodelist" \
       op start   timeout="60s" interval="0s" on-fail="restart" \
       op monitor timeout="60s" interval="4s" on-fail="restart" \
       op monitor timeout="60s" interval="3s" on-fail="restart" role="Master" \
       op promote timeout="60s" interval="0s" on-fail="restart" \
       op demote  timeout="60s" interval="0s" on-fail="stop" \
       op stop    timeout="60s" interval="0s" on-fail="block" \
       op notify  timeout="60s" interval="0s"

    pcs -f PGSQL_CFG resource master PG-MASTER PGSQL \
       master-max=1 master-node-max=1 clone-max=3 clone-node-max=1 notify=true

    pcs -f PGSQL_CFG resource group add MASTER-GROUP VADDR-MAIN VADDR-REPL

    pcs -f PGSQL_CFG constraint colocation add MASTER-GROUP with Master PG-MASTER INFINITY
    pcs -f PGSQL_CFG constraint order promote PG-MASTER then start MASTER-GROUP symmetrical=false score=INFINITY
    pcs -f PGSQL_CFG constraint order demote  PG-MASTER then stop  MASTER-GROUP symmetrical=false score=0

    pcs cluster cib-push PGSQL_CFG

    chmod a-x "$0"
}

except() {
    local ret=$?
    echo "* FATAL: error occured on line ${1:-UNKNOWN}"
    exit $ret
}

main
