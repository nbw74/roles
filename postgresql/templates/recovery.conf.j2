# THIS FILE IS MANAGED BY ANSIBLE, ALL CHANGES WILL BE LOST
primary_conninfo = 'host={{ postgresql_recovery_conf.primary_conninfo.host }} port={{ postgresql_recovery_conf.primary_conninfo.port|d('5432') }} user={{ postgresql_recovery_conf.primary_conninfo.user|d('replicator') }} application_name={{ postgresql_recovery_conf.primary_conninfo.application_name|d(ansible_nodename.split('.')[0]) }} keepalives_idle={{ postgresql_recovery_conf.primary_conninfo.keepalives_idle|d('20') }} keepalives_interval={{ postgresql_recovery_conf.primary_conninfo.keepalives_interval|d('5') }} keepalives_count={{ postgresql_recovery_conf.primary_conninfo.keepalives_count|d('5') }}'
{% if postgresql_recovery_conf.trigger_file is defined %}
trigger_file = '{{ postgresql_recovery_conf.trigger_file }}'
{% endif %}
{% if postgresql_recovery_conf.recovery_min_apply_delay is defined %}
recovery_min_apply_delay = '{{ postgresql_recovery_conf.recovery_min_apply_delay }}'
{% endif %}
recovery_target_timeline = '{{ postgresql_recovery_conf.recovery_target_timeline|d('latest') }}'
{% if postgresql_recovery_conf.restore_command is defined %}
restore_command = '{{ postgresql_recovery_conf.restore_command }}'
{% elif postgresql_walarchive|length > 0 %}
restore_command = 'ssh {{ postgresql_walarchive.user|d('walarchive') }}@{{ postgresql_walarchive.server }} "cat {{ postgresql_walarchive.dir|d(ansible_nodename.split('.')[0]) }}/%f.bz2" | lbzip2 -d - > %p'
{% endif %}
standby_mode = '{{ postgresql_recovery_conf.standby_mode|d('on') }}'
