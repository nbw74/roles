---
- name: validate nginx
  command: "nginx -t"
  notify: reload nginx

- name: reload nginx
  service:
    name: "nginx"
    state: reloaded

- name: validate php-fpm
  command: "/sbin/php-fpm -t"
  notify: reload php-fpm

- name: reload php-fpm
  systemd:
    name: "php-fpm.service"
    state: reloaded

- name: validate apache
  command: "apachectl configtest"
  notify: reload apache

- name: reload apache
  systemd:
    name: "httpd.service"
    state: reloaded

- name: config reload icinga2
  systemd:
    name: "icinga2.service"
    state: reloaded
  delegate_to: "{{ common_icinga2_master }}"

- name: config reload postgresql
  systemd:
    name: "postgresql-{{ item[1].stdout | regex_replace('.*(\\d+\\.?\\d+).*', '\\1') }}.service"
    state: reloaded
  delegate_to: "{{ item[0].db.host }}"
  when:
    - item[0].db is defined
    - item[0].db.type == 'postgresql'
    - item[2].changed
  with_together:
    - "{{ vhost }}"
    - "{{ vhost_pgsql_datadir.results }}"
    - "{{ vhost_pgsql_hba_line.results }}"
  loop_control:
    label: "{{ item[0].name }}"
  run_once: true

- name: config reload pgbouncer
  systemd:
    name: "pgbouncer.service"
    state: reloaded
  delegate_to: "{{ item[0].db.pgbouncer.host }}"
  when:
    - item[0].db is defined
    - item[0].db.type == 'postgresql'
    - item[0].db.pgbouncer is defined
    - item[1].changed or item[2].changed
  with_together:
    - "{{ vhost }}"
    - "{{ vhost_pgsql_ini_line.results }}"
    - "{{ vhost_pgsql_txt_line.results }}"
  loop_control:
    label: "{{ item[0].name }}"
  run_once: true

- name: repo git created
  shell: >
    cd {{ vhost_git_path }}/{{ item.item.repo.name|d(item.item.name
    | regex_replace('.' ~ vhost_default_ddns_zone ~ '$', '')) }}
    && git update-server-info
  when:
    - item.item.repo is defined
    - item.item.repo.type|d('none') == 'git'
    - item.item.state|d(true)
    - item.changed
  with_items: "{{ vhost_git_hook.results }}"
  loop_control:
    label: "{{ item.item.name }}"
  delegate_to: "{{ vhost_git_server }}"

- name: restorecon command
  command: >
    restorecon -r "{{ item.home }}"
  when:
    - selinux_state != 'disabled'
    - item.nginx_301_only is not defined
    - item.state == 'present'
    - item.changed
  with_items: "{{ vhost_user.results }}"
  loop_control:
    label: "{{ item.name|d('null') }}"
  ignore_errors: yes

- name: acl default mask
  file:
    path: "{{ flags_dir }}/acl_dm_{{ acl_username }}"
    state: touch

- name: acl current mask
  file:
    path: "{{ flags_dir }}/acl_cm_{{ acl_username }}"
    state: touch

- name: acl default apache
  file:
    path: "{{ flags_dir }}/acl_da_{{ acl_username }}"
    state: touch

- name: acl current apache
  file:
    path: "{{ flags_dir }}/acl_ca_{{ acl_username }}"
    state: touch
...
