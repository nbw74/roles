---
- name: set default ip address if public
  set_fact:
    vhost_default_ipaddr: "{{ ansible_all_ipv4_addresses | ipaddr('public') | first | d('empty') }}"
  tags: [ conf ]

- name: set default ip address if private only
  set_fact:
    vhost_default_ipaddr: "{{ ansible_all_ipv4_addresses | ipaddr('private') | first }}"
  when: vhost_default_ipaddr == 'empty'
  tags: [ conf ]

- name: get first private address
  set_fact:
    vhost_ipv4_private: "{{ ansible_all_ipv4_addresses | ipaddr('private') | first | d('empty') }}"
  tags: [ webcheck ]

- name: determine if prod circuit
  set_fact:
    vhost_circuit_prod: true
  when: vhost_ipv4_private|ipaddr(item)
  with_items: "{{ common_icinga2_master_zone_net_list }}"
  tags: [ webcheck ]

- name: get nginx version
  shell: "nginx -V 2>&1 | awk '/nginx version:/ { print $3 }'"
  register: vhost_reg_nginx_ver
  changed_when: no
  tags: [ version ]

- name: get php version
  shell: "php -v | awk '/PHP .* \\(cli\\)/ { print $2 }'"
  register: vhost_reg_php_ver
  when: vhost_backend != 'reverse-proxy'
  changed_when: no
  tags: [ version ]

- name: get apache version
  shell: "httpd -V | awk '/Server version:/ { print $3 }'"
  register: vhost_reg_apache_ver
  when: vhost_backend == 'apache' or vhost_backend == 'bitrix'
  changed_when: no
  tags: [ version ]

- name: get bitrix-env version
  command: rpm -q --qf "%{NAME}/%{VERSION}-%{RELEASE}" bitrix-env
  args:
    warn: no
  when: vhost_backend == 'bitrix'
  register: vhost_reg_bitrix_ver
  changed_when: no
  tags: [ version ]

- name: set nginx version fact
  set_fact:
    vhost_nginx_version: "{{ vhost_reg_nginx_ver.stdout }}"
  tags: [ version ]

- name: set php version fact
  set_fact:
    vhost_php_version: "php/{{ vhost_reg_php_ver.stdout }}"
  when: vhost_backend != 'reverse-proxy'
  tags: [ version ]

- name: set apache version fact
  set_fact:
    vhost_apache_version: "{{ vhost_reg_apache_ver.stdout }}"
  when: vhost_backend == 'apache' or vhost_backend == 'bitrix'
  tags: [ version ]

- name: set bitrix version fact
  set_fact:
    vhost_bitrix_version: "{{ vhost_reg_bitrix_ver.stdout }}"
  when: vhost_backend == 'bitrix'
  tags: [ version ]

- name: get postgresql datadir
  shell: pgrep -af '.*(postgres|postmaster)\s+-D\s+.*'|awk '{ match($0, /-D[[:space:]]+[/.a-z0-9]+/); dir=substr($0, RSTART, RLENGTH); sub(/-D[[:space:]]+/, "", dir); sub(/\/$/, "", dir); print dir; exit }'
  register: vhost_pgsql_datadir
  delegate_to: "{{ item.db.host }}"
  when:
    - item.db is defined
    - item.db.type == 'postgresql'
  with_items: "{{ vhost }}"
  loop_control:
    label: "{{ item.name }}"
  changed_when: no
  tags: [ db ]

- name: get timestamp
  command: "date '+%FT%H%M'"
  register: vhost_get_time
  changed_when: no
  tags: [ archive, db ]

- name: set timestamp
  set_fact:
    vhost_timestamp: "{{ vhost_get_time.stdout }}"
  tags: [ archive, db ]
...
