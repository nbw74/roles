---
- name: Cron tasks absent
  cron:
    name: "{{ item[1].name }}"
    user: "{{ item[0].user|d(item[0].name) }}"
    job: "{{ item[1].job }}"
    minute: "{{ item[1].minute|d('*') }}"
    hour: "{{ item[1].hour|d('*') }}"
    day: "{{ item[1].day|d('*') }}"
    weekday: "{{ item[1].weekday|d('*') }}"
    month: "{{ item[1].month|d('*') }}"
    disabled: "{{ item[1].disabled|d('false') }}"
    state: absent
  when: not item[0].state|d(true)
  with_subelements:
    - "{{ vhost }}"
    - cron
    - flags:
      skip_missing: true
  loop_control:
    label: "{{ item[0].user|d(item[0].name) }}:{{ item[1].name }}"
  tags: [ cron ]

- name: manage user
  user:
    name: "{{ item.user|d(item.name) }}"
    shell: "/bin/bash"
    home: "{{ vhost_basedir }}/{{ item.user|d(item.name) }}"
    generate_ssh_key: yes
    ssh_key_type: "{{ item.key_type|d('ed25519') }}"
    state: "{{ item.state|d(true)|ternary('present', 'absent') }}"
    remove: no
    force: yes
  register: vhost_user
  when: item.nginx_301_only is not defined
  with_items: "{{ vhost }}"
  loop_control:
    label: "{{ item.user|d(item.name) }}"
  notify: restorecon command
  tags: [ user, db ]

- name: set password
  user:
    name: "{{ item.user|d(item.name) }}"
    password: "{{ item.password|password_hash('sha512', 'bzzz') }}"
    update_password: always
  when:
    - item.state|d(true)
    - item.password is defined
  with_items: "{{ vhost }}"
  loop_control:
    label: "{{ item.user|d(item.name) }}"
  tags: [ user, db, password ]

- name: copy pubkey to authorized_keys
  copy:
    src: "{{ item.ssh_key_file }}.pub"
    dest: "{{ item.home }}/.ssh/authorized_keys"
    remote_src: yes
    force: yes
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
    mode: 0600
  when:
    - item.changed
    - item.state == 'present'
  with_items: "{{ vhost_user.results }}"
  loop_control:
    label: "{{ item.name|d('null') }}"
  notify: restorecon command
  tags: [ user, db ]

- name: set homedir mode
  file:
    path: "{{ item.home }}"
    state: directory
    mode: 0750
  when:
    - item.state|d('nope') == 'present'
    - not item.legacy|d()
  with_items: "{{ vhost_user.results }}"
  loop_control:
    label: "{{ item.name|d('null') }}"
  tags: [ user, db ]

- name: add web-server users to the user group
  user:
    name: "{{ item[0] }}"
    append: yes
    groups: "{{ item[1].name }}"
  when:
    - item[1].state|d('absent') == 'present'
  with_nested:
    - [ '{{ vhost_frontuser }}', '{{ vhost_backuser }}' ]
    - "{{ vhost_user.results }}"
  loop_control:
    label: "{{ item[0] }}, {{ item[1].name|d('null') }}"
  tags: [ user, db ]

- name: remove unused groups
  group:
    name: "{{ item.name }}"
    state: absent
  when:
    - item.changed
    - item.state == 'absent'
  with_items: "{{ vhost_user.results }}"
  loop_control:
    label: "{{ item.name|d('null') }}"
  tags: [ user, db ]

- name: Cron tasks present
  cron:
    name: "{{ item[1].name }}"
    user: "{{ item[0].user|d(item[0].name) }}"
    job: "{{ item[1].job }}"
    minute: "{{ item[1].minute|d('*') }}"
    hour: "{{ item[1].hour|d('*') }}"
    day: "{{ item[1].day|d('*') }}"
    weekday: "{{ item[1].weekday|d('*') }}"
    month: "{{ item[1].month|d('*') }}"
    disabled: "{{ item[1].disabled|d('false') }}"
    state: present
  when: item[0].state|d(True)
  with_subelements:
    - "{{ vhost }}"
    - cron
    - flags:
      skip_missing: true
  loop_control:
    label: "{{ item[0].user|d(item[0].name) }}:{{ item[1].name }}"
  tags: [ cron ]

- name: manage common directories
  file:
    state: directory
    path: "{{ vhost_basedir }}/{{ item[1].user|d(item[1].name) }}/{{ item[0] }}"
    owner: "{{ item[1].user|d(item[1].name) }}"
    group: "{{ item[1].user|d(item[1].name) }}"
    mode: 0775
  when:
    - vhost_backend != 'bitrix'
    - item[1].state|d(true)
    - not item[1].legacy|d()
    - item[1].nginx_301_only is not defined
  with_nested:
    - [ 'tmp', 'log' ]
    - "{{ vhost }}"
  loop_control:
    label: "{{ item[0] }}, {{ item[1].user|d(item[1].name) }}"
  notify: restorecon command
  tags: [ user, db ]

- name: manage webroot directory
  file:
    state: directory
    path: "{{ vhost_basedir }}/{{ item.user|d(item.name) }}/{{ item.webroot|d('www') }}"
    owner: "{{ item.user|d(item.name) }}"
    group: "{{ item.user|d(item.name) }}"
    mode: "{{ (vhost_backend == 'bitrix')|ternary('0770','0755') }}"
  when:
    - item.state|d(true)
    - item.nginx_301_only is not defined
  with_items: "{{ vhost }}"
  loop_control:
    label: "{{ item.user|d(item.name) }}"
  tags: [ user, db ]

- name: Initial index file
  copy:
    src: "index.php"
    dest: "{{ vhost_basedir }}/{{ item.user|d(item.name) }}/{{ item.webroot|d('www') }}/index.php"
    owner: "{{ item.user|d(item.name) }}"
    group: "{{ item.user|d(item.name) }}"
    mode: 0644
    force: no
  when:
    - item.state|d(true)
    - not item.legacy|d()
    - item.nginx_301_only is not defined
    - vhost_backend != 'bitrix'
  with_items: "{{ vhost }}"
  loop_control:
    label: "{{ item.user|d(item.name) }}"
  tags: [ user, db ]
...
