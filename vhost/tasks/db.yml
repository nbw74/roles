---
- name: dump mysql database
  mysql_db:
    state: dump
    name: "{{ item[0].db.name }}"
    target: "{{ vhost_preserve }}/{{ item[0].db.name }}-{{ vhost_timestamp }}.sql.bz2"
    login_host: "{{ item[0].db.host }}"
    login_port: "{{ item[0].db.port|d('3306') }}"
    login_user: "{{ vhost_db_mysql_admin_user }}"
    login_password: "{{ vhost_db_mysql_admin_pass }}"
  when:
    - item[1].changed
    - item[1].state == 'absent'
  with_together:
    - "{{ vhost }}"
    - "{{ vhost_user.results }}"
  loop_control:
    label: "{{ item[0].db.name }}"
  tags: [ db ]

- name: manage mysql database
  mysql_db:
    name: "{{ item.db.name }}"
    state: "{{ item.state|d(true)|ternary('present', 'absent') }}"
    encoding: "{{ item.db.encoding|d('utf8') }}"
    collation: "{{ item.db.collation|d('utf8_general_ci') }}"
    login_host: "{{ item.db.host }}"
    login_port: "{{ item.db.port|d('3306') }}"
    login_user: "{{ vhost_db_mysql_admin_user }}"
    login_password: "{{ vhost_db_mysql_admin_pass }}"
  when:
    - item.db is defined
    - item.db.type == 'mysql'
  with_items: "{{ vhost }}"
  tags: [ db ]

- name: manage mysql user
  mysql_user:
    name: "{{ item.db.name }}"
    password: "{{ item.db.pass }}"
    host: "%"
    priv: "{{ item.db.name }}.*:ALL"
    state: "{{ item.state|d(true)|ternary('present', 'absent') }}"
    login_host: "{{ item.db.host }}"
    login_port: "{{ item.db.port|d('3306') }}"
    login_user: "{{ vhost_db_mysql_admin_user }}"
    login_password: "{{ vhost_db_mysql_admin_pass }}"
  when:
    - item.db is defined
    - item.db.type == 'mysql'
  with_items: "{{ vhost }}"
  tags: [ db ]

- name: add postgresql user
  postgresql_user:
    name: "{{ item.db.name }}"
    password: "{{ item.db.pass }}"
    state: present
    role_attr_flags: LOGIN,NOSUPERUSER
    login_host: "{{ item.db.host }}"
    port: "{{ item.db.port|d('5432') }}"
    login_user: "{{ vhost_db_pgsql_admin_user }}"
    login_password: "{{ vhost_db_pgsql_admin_pass }}"
    ssl_mode: disable
  when:
    - item.db is defined
    - item.db.type == 'postgresql'
    - item.state|d(yes)
  with_items: "{{ vhost }}"
  tags: [ db ]

- name: manage postgresql database
  postgresql_db:
    name: "{{ item.db.name }}"
    owner: "{{ item.db.name }}"
    state: "{{ item.state|d(true)|ternary('present', 'absent') }}"
    login_host: "{{ item.db.host }}"
    port: "{{ item.db.port|d('5432') }}"
    login_user: "{{ vhost_db_pgsql_admin_user }}"
    login_password: "{{ vhost_db_pgsql_admin_pass }}"
    maintenance_db: ansible
    ssl_mode: disable
  when:
    - item.db is defined
    - item.db.type == 'postgresql'
  with_items: "{{ vhost }}"
  tags: [ db ]

- name: delete postgresql user
  postgresql_user:
    name: "{{ item.db.name }}"
    state: absent
    login_host: "{{ item.db.host }}"
    port: "{{ item.db.port|d('5432') }}"
    login_user: "{{ vhost_db_pgsql_admin_user }}"
    login_password: "{{ vhost_db_pgsql_admin_pass }}"
    ssl_mode: disable
  when:
    - item.db is defined
    - item.db.type == 'postgresql'
    - not item.state|d(yes)
  with_items: "{{ vhost }}"
  tags: [ db ]

- name: line in pg_hba
  lineinfile:
    path: "{{ item[1].stdout }}/pg_hba.conf"
    line: "host\t{{ item[0].db.name }}\t{{ item[0].db.name }}\t{% if item[0].db.bouncer is defined %}{{ item[0].db.bouncer_ip|d('127.0.0.1/32') }}{% else %}0.0.0.0/0{% endif %}\t\tmd5"
    insertbefore: "## MARK ONE ##"
    state: "{{ item[0].state|d(true)|ternary('present', 'absent') }}"
  delegate_to: "{{ item[0].db.host }}"
  when:
    - item[0].db is defined
    - item[0].db.type == 'postgresql'
  with_together:
    - "{{ vhost }}"
    - "{{ vhost_pgsql_datadir.results }}"
  loop_control:
    label: "{{ item[0].db.name }}"
  notify: config reload postgresql
  tags: [ db ]
...
# Create admin users
#
# GRANT ALL PRIVILEGES ON *.* TO 'vhost_db_mysql_admin_user'@'%' IDENTIFIED BY 'vhost_db_mysql_admin_pass' WITH GRANT OPTION;
# FLUSH PRIVILEGES;
#
# CREATE ROLE vhost_db_pgsql_admin_user LOGIN SUPERUSER ENCRYPTED PASSWORD 'vhost_db_pgsql_admin_pass';
# CREATE DATABASE ansible OWNER ansible;
