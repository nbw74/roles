# THIS FILE IS MANAGED BY ANSIBLE, ALL CHANGES WILL BE LOST

Client {
  Name = "{{ bacula_fd.prefix|d(inventory_hostname.split('.')[0]) }}-fd"
  Address = "{{ inventory_hostname }}"
  FDPort = 9102
  Catalog = BaculaCatalog
  Password = "{{ __bacula_fd_passwd.content|b64decode|trim }}"
  File Retention = {{ bacula_fd.file_retention|d('16 months') }}
  Job Retention = {{ bacula_fd.job_retention|d('16 months') }}
  AutoPrune = yes
  Maximum Concurrent Jobs = 1
  TLS Enable = yes
  TLS Require = yes
  TLS CA Certificate File = "/etc/bacula/{{ bacula_ca.path|basename }}"
  TLS Certificate = "/etc/bacula/{{ bacula_dir.cn }}.crt"
  TLS Key = "/etc/bacula/{{ bacula_dir.cn }}.key"
}
{% if bacula_fd.jobs.conf is defined %}

Job {
  Name = "{{ bacula_fd.prefix|d(inventory_hostname.split('.')[0]) }}-conf"
  Client = "{{ bacula_fd.prefix|d(inventory_hostname.split('.')[0]) }}-fd"
  JobDefs = "OrdinaryJob"
{% if bacula_fd.jobs.conf.fileset is defined %}
  FileSet = "{{ bacula_fd.jobs.conf.fileset }}"
{% endif %}
  Pool = {{ bacula_fd.jobs.conf.pools.full }}
  Full Backup Pool = {{ bacula_fd.jobs.conf.pools.full }}
{% if bacula_fd.jobs.conf.pools.differential is defined %}
  Differential Backup Pool = {{ bacula_fd.jobs.conf.pools.differential }}
{% endif %}
{% if bacula_fd.jobs.conf.pools.incremental is defined %}
  Incremental Backup Pool = {{ bacula_fd.jobs.conf.pools.incremental }}
{% endif %}
  Enabled = {{ bacula_fd.jobs.conf.enabled|d(True)|ternary('yes', 'no') }}
}
{% endif %}
{% if bacula_fd.jobs.mysql is defined %}

Job {
  Name = "{{ bacula_fd.prefix|d(inventory_hostname.split('.')[0]) }}-mysql"
  Client = "{{ bacula_fd.prefix|d(inventory_hostname.split('.')[0]) }}-fd"
  JobDefs = "InnoBakIncr"
  ClientRunBeforeJob = "{{ bacula_fd.jobs.mysql.client_run_before_job }}"
  Pool = {{ bacula_fd.jobs.mysql.pools.full }}
  Full Backup Pool = {{ bacula_fd.jobs.mysql.pools.full }}
{% if bacula_fd.jobs.mysql.pools.differential is defined %}
  Differential Backup Pool = {{ bacula_fd.jobs.mysql.pools.differential }}
{% endif %}
{% if bacula_fd.jobs.mysql.pools.incremental is defined %}
  Incremental Backup Pool = {{ bacula_fd.jobs.mysql.pools.incremental }}
{% endif %}
  Enabled = {{ bacula_fd.jobs.mysql.enabled|d(True)|ternary('yes', 'no') }}
}
{% endif %}
{% if bacula_fd.jobs.pgconf is defined %}

Job {
  Name = "{{ bacula_fd.prefix|d(inventory_hostname.split('.')[0]) }}-pgconf"
  Client = "{{ bacula_fd.prefix|d(inventory_hostname.split('.')[0]) }}-fd"
  JobDefs = "PostgresConfJob"
  Pool = {{ bacula_fd.jobs.pgconf.pools.full }}
  Full Backup Pool = {{ bacula_fd.jobs.pgconf.pools.full }}
{% if bacula_fd.jobs.pgconf.pools.differential is defined %}
  Differential Backup Pool = {{ bacula_fd.jobs.pgconf.pools.differential }}
{% endif %}
{% if bacula_fd.jobs.pgconf.pools.incremental is defined %}
  Incremental Backup Pool = {{ bacula_fd.jobs.pgconf.pools.incremental }}
{% endif %}
  Enabled = {{ bacula_fd.jobs.pgconf.enabled|d(True)|ternary('yes', 'no') }}
}
{% endif %}
{% if bacula_fd.jobs.opt is defined %}

Job {
  Name = "{{ bacula_fd.prefix|d(inventory_hostname.split('.')[0]) }}-opt"
  Client = "{{ bacula_fd.prefix|d(inventory_hostname.split('.')[0]) }}-fd"
  JobDefs = "OrdinaryJob"
  FileSet = "justopt"
  Pool = {{ bacula_fd.jobs.opt.pools.full }}
  Full Backup Pool = {{ bacula_fd.jobs.opt.pools.full }}
{% if bacula_fd.jobs.opt.pools.differential is defined %}
  Differential Backup Pool = {{ bacula_fd.jobs.opt.pools.differential }}
{% endif %}
{% if bacula_fd.jobs.opt.pools.incremental is defined %}
  Incremental Backup Pool = {{ bacula_fd.jobs.opt.pools.incremental }}
{% endif %}
  Enabled = {{ bacula_fd.jobs.opt.enabled|d(True)|ternary('yes', 'no') }}
}
{% endif %}
{% if bacula_fd.jobs.ipa is defined %}

Job {
  Name = "{{ bacula_fd.prefix|d(inventory_hostname.split('.')[0]) }}-ipa"
  Client = "{{ bacula_fd.prefix|d(inventory_hostname.split('.')[0]) }}-fd"
  JobDefs = "ipaBackup"
  Pool = {{ bacula_fd.jobs.ipa.pools.full }}
  Full Backup Pool = {{ bacula_fd.jobs.ipa.pools.full }}
{% if bacula_fd.jobs.ipa.pools.differential is defined %}
  Differential Backup Pool = {{ bacula_fd.jobs.ipa.pools.differential }}
{% endif %}
{% if bacula_fd.jobs.ipa.pools.incremental is defined %}
  Incremental Backup Pool = {{ bacula_fd.jobs.ipa.pools.incremental }}
{% endif %}
  Enabled = {{ bacula_fd.jobs.ipa.enabled|d(True)|ternary('yes', 'no') }}
}
{% endif %}
{% if bacula_fd.jobs.www is defined %}

Job {
  Name = "{{ bacula_fd.prefix|d(inventory_hostname.split('.')[0]) }}-www"
  Client = "{{ bacula_fd.prefix|d(inventory_hostname.split('.')[0]) }}-fd"
  JobDefs = "OrdinaryJob"
  FileSet = "varwww"
  Pool = {{ bacula_fd.jobs.www.pools.full }}
  Full Backup Pool = {{ bacula_fd.jobs.www.pools.full }}
{% if bacula_fd.jobs.www.pools.differential is defined %}
  Differential Backup Pool = {{ bacula_fd.jobs.www.pools.differential }}
{% endif %}
{% if bacula_fd.jobs.www.pools.incremental is defined %}
  Incremental Backup Pool = {{ bacula_fd.jobs.www.pools.incremental }}
{% endif %}
  Enabled = {{ bacula_fd.jobs.www.enabled|d(True)|ternary('yes', 'no') }}
}
{% endif %}
{% if bacula_fd.jobs.redmine is defined %}

Job {
  Name = "{{ bacula_fd.prefix|d(inventory_hostname.split('.')[0]) }}-redmine"
  Client = "{{ bacula_fd.prefix|d(inventory_hostname.split('.')[0]) }}-fd"
  JobDefs = "OrdinaryJob"
  FileSet = "redmineFiles"
  Pool = {{ bacula_fd.jobs.redmine.pools.full }}
  Full Backup Pool = {{ bacula_fd.jobs.redmine.pools.full }}
{% if bacula_fd.jobs.redmine.pools.differential is defined %}
  Differential Backup Pool = {{ bacula_fd.jobs.redmine.pools.differential }}
{% endif %}
{% if bacula_fd.jobs.redmine.pools.incremental is defined %}
  Incremental Backup Pool = {{ bacula_fd.jobs.redmine.pools.incremental }}
{% endif %}
  Enabled = {{ bacula_fd.jobs.redmine.enabled|d(True)|ternary('yes', 'no') }}
}
{% endif %}
{% if bacula_fd.jobs.svn is defined %}

Job {
  Name = "{{ bacula_fd.prefix|d(inventory_hostname.split('.')[0]) }}-svn"
  Client = "{{ bacula_fd.prefix|d(inventory_hostname.split('.')[0]) }}-fd"
  JobDefs = "OrdinaryJob"
  FileSet = "SVN"
  Pool = {{ bacula_fd.jobs.svn.pools.full }}
  Full Backup Pool = {{ bacula_fd.jobs.svn.pools.full }}
{% if bacula_fd.jobs.svn.pools.differential is defined %}
  Differential Backup Pool = {{ bacula_fd.jobs.svn.pools.differential }}
{% endif %}
{% if bacula_fd.jobs.svn.pools.incremental is defined %}
  Incremental Backup Pool = {{ bacula_fd.jobs.svn.pools.incremental }}
{% endif %}
  Enabled = {{ bacula_fd.jobs.svn.enabled|d(True)|ternary('yes', 'no') }}
}
{% endif %}

